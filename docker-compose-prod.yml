version: '3.8'

services:
  nginx:
    container_name: mhkk_nginx
    restart: "always"
    image: nginx:alpine
    ports:
      - 80:80
      - "443:443"
    volumes:
      - ./images/nginx/mhkk.ssl.conf:/etc/nginx/conf.d/default.conf
      - ./.certbot/certbot/conf:/etc/letsencrypt
      - ./.certbot/certbot/www:/var/www/certbot
      - ./images/nginx/mime.types:/etc/nginx/mime.types
      - ./logs:/var/log/nginx
      - ./app:/app/
      - ./client/dist:/var/www/html
    depends_on:
      - web
      - db
    networks:
      - mhkk-net

  web:
    restart: "always"
    container_name: mhkk_django
    volumes:
      - ./app:/app
    build:
      context: ./
      dockerfile: images/django/Dockerfile
    command: python manage.py runserver --insecure 0.0.0.0:8000
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_DB=mhkk
    depends_on:
      - db
    networks:
      - mhkk-net

  client:
    container_name: mhkk_client
    build:
      context: ./
      dockerfile: images/node/Dockerfile.prod
    volumes:
      - ./client:/app
    ports:
      - "8080:8080"
    networks:
      - mhkk-net

  certbot:
    container_name: certbot
    image: certbot/certbot
    networks:
      - mhkk-net
    volumes:
      - ./.certbot/certbot/conf:/etc/letsencrypt
      - ./.certbot/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  db:
    container_name: mhkk_db
    image: postgres:14
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_DB=mhkk
    networks:
      - mhkk-net

networks:
  mhkk-net:
    driver: bridge
    